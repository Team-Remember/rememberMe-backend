# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
        
    - name: Set yml file
      uses: microsoft/variable-substitution@v1
      with:
        files: ./src/main/resources/application.yml
      env:
        spring.mail.username: ${{ secrets.MAIL_USERNAME }} 
        spring.mail.password: ${{ secrets.MAIL_PASSWORD }} 
        spring.datasource.url: ${{ secrets.DATASOURCE_URL }} 
        spring.datasource.username: ${{ secrets.DATASOURCE_USERNAME }} 
        spring.datasource.password: ${{ secrets.DATASOURCE_PASSWORD }} 
        jwt.secret: ${{ secrets.JWT_SECRET }}
        cloud.aws.credentials.accessKey: ${{ secrets.AWS_ACCESS_KEY_ID }}
        cloud.aws.credentials.secretKey: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        cloud.aws.s3.bucket: ${{ secrets.AWS_S3_BUCKET }}
                
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    ## 웹 이미지 빌드 및 도커허브에 push
    - name: web docker build and push
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build -t ${{ secrets.DOCKER_REPO }}/rememberme-backend ./
        docker push ${{ secrets.DOCKER_REPO }}/rememberme-backend
    - name: Get timestamp
      uses: gerred/actions/current-time@master
      id: current-time
      
   # - name: EC2 Docker Run
   #   uses: appleboy/ssh-action@master
   #   with:
   #     host: ${{ secrets.EC2_HOST }}
   #     username: ubuntu
   #     key: ${{ secrets.EC2_KEY }}
   #     script: |
   #       docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
   #      docker rm -f $(docker ps -qa)
   #       docker rmi ${{ secrets.DOCKER_REPO }}/rememberme-backend
   #       docker run -p 8080:8001 -d ${{ secrets.DOCKER_REPO }}/rememberme-backend

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

  deploy:
      name: CD with EB
      runs-on: ubuntu-latest
      needs: build
      
      steps:
      - uses: actions/checkout@v3
      
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"    
          
      - name: Generate deployment directory
        run: |
          mkdir -p deploy
          cp Dockerrun.aws.json deploy/Dockerrun.aws.json
          cd deploy && zip -r deploy.zip .
      - name: Deploy with EB
        uses: einaregilsson/beanstalk-deploy@v14
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: ${{ secrets.AWS_REGION }}
          environment_name: ${{ secrets.AWS_EB_ENV_NAME }}
          application_name: ${{ secrets.AWS_EB_APP_NAME }}
          version_label: rememberme-${{steps.current-time.outputs.formattedTime}}
          deployment_package: deploy/deploy.zip
          wait_for_environment_recovery: 200
